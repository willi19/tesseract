typedef enum
{
    K4A_DEPTH_MODE_OFF = 0,        /**< Depth sensor will be turned off with this setting. */
    K4A_DEPTH_MODE_NFOV_2X2BINNED, /**< Depth captured at 320x288. Passive IR is also captured at 320x288. */
    K4A_DEPTH_MODE_NFOV_UNBINNED,  /**< Depth captured at 640x576. Passive IR is also captured at 640x576. */
    K4A_DEPTH_MODE_WFOV_2X2BINNED, /**< Depth captured at 512x512. Passive IR is also captured at 512x512. */
    K4A_DEPTH_MODE_WFOV_UNBINNED,  /**< Depth captured at 1024x1024. Passive IR is also captured at 1024x1024. */
    K4A_DEPTH_MODE_PASSIVE_IR,     /**< Passive IR only, captured at 1024x1024. */
} k4a_depth_mode_t;

typedef enum
{
    K4A_COLOR_RESOLUTION_OFF = 0, /**< Color camera will be turned off with this setting */
    K4A_COLOR_RESOLUTION_720P,    /**< 1280 * 720  16:9 */
    K4A_COLOR_RESOLUTION_1080P,   /**< 1920 * 1080 16:9 */
    K4A_COLOR_RESOLUTION_1440P,   /**< 2560 * 1440 16:9 */
    K4A_COLOR_RESOLUTION_1536P,   /**< 2048 * 1536 4:3  */
    K4A_COLOR_RESOLUTION_2160P,   /**< 3840 * 2160 16:9 */
    K4A_COLOR_RESOLUTION_3072P,   /**< 4096 * 3072 4:3  */
} k4a_color_resolution_t;

typedef enum
{
    /** Color image type MJPG.
     *
     * \details
     * The buffer for each image is encoded as a JPEG and can be decoded by a JPEG decoder.
     *
     * \details
     * Because the image is compressed, the stride parameter for the \ref k4a_image_t is not applicable.
     *
     * \details
     * Each MJPG encoded image in a stream may be of differing size depending on the compression efficiency.
     */
    K4A_IMAGE_FORMAT_COLOR_MJPG = 0,

    /** Color image type NV12.
     *
     * \details
     * NV12 images separate the luminance and chroma data such that all the luminance is at the
     * beginning of the buffer, and the chroma lines follow immediately after.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each line
     * of the image in memory. Chroma has half as many lines of height and half the width in pixels of the luminance.
     * Each chroma line has the same width in bytes as a luminance line.
     */
    K4A_IMAGE_FORMAT_COLOR_NV12,

    /** Color image type YUY2.
     *
     * \details
     * YUY2 stores chroma and luminance data in interleaved pixels.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     */
    K4A_IMAGE_FORMAT_COLOR_YUY2,

    /** Color image type BGRA32.
     *
     * \details
     * Each pixel of BGRA32 data is four bytes. The first three bytes represent Blue, Green,
     * and Red data. The fourth byte is the alpha channel and is unused in the Azure Kinect APIs.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     *
     * \details
     * The Azure Kinect device does not natively capture in this format. Requesting images of this format
     * requires additional computation in the API.
     *
     */
    K4A_IMAGE_FORMAT_COLOR_BGRA32,

    /** Depth image type DEPTH16.
     *
     * \details
     * Each pixel of DEPTH16 data is two bytes of little endian unsigned depth data. The unit of the data is in
     * millimeters from the origin of the camera.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     */
    K4A_IMAGE_FORMAT_DEPTH16,

    /** Image type IR16.
     *
     * \details
     * Each pixel of IR16 data is two bytes of little endian unsigned depth data. The value of the data represents
     * brightness.
     *
     * \details
     * This format represents infrared light and is captured by the depth camera.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     */
    K4A_IMAGE_FORMAT_IR16,

    /** Single channel image type CUSTOM8.
     *
     * \details
     * Each pixel of CUSTOM8 is a single channel one byte of unsigned data.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     */
    K4A_IMAGE_FORMAT_CUSTOM8,

    /** Single channel image type CUSTOM16.
     *
     * \details
     * Each pixel of CUSTOM16 is a single channel two bytes of little endian unsigned data.
     *
     * \details
     * Stride indicates the length of each line in bytes and should be used to determine the start location of each
     * line of the image in memory.
     */
    K4A_IMAGE_FORMAT_CUSTOM16,

    /** Custom image format.
     *
     * \details
     * Used in conjunction with user created images or images packing non-standard data.
     *
     * \details
     * See the originator of the custom formatted image for information on how to interpret the data.
     */
    K4A_IMAGE_FORMAT_CUSTOM,
} k4a_image_format_t;

typedef enum
{
    K4A_FRAMES_PER_SECOND_5 = 0, /**< 5 FPS */
    K4A_FRAMES_PER_SECOND_15,    /**< 15 FPS */
    K4A_FRAMES_PER_SECOND_30,    /**< 30 FPS */
} k4a_fps_t;
